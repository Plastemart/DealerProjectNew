@{
    ViewBag.Title = "PendingPurchaseInvoice";
}

@Html.AntiForgeryToken()
<input type="hidden" id="HiddenCurrentDate" value="@DateTime.Now" />
<input type="hidden" id="HiddenPartyId" value="@Session["PartyId"]" />
<div class="box box-warning">
    <div class="box-header with-border">
        <div class="box-header-left">
            <div class="row">
                <div class="col-md-3">
                    <h3 class="box-title">Purchase Invoice</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="box-body">
        <form class="form-horizontal">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="">From Date</label>
                        <div class="col-sm-8 MY8">
                            <div id="txtFromDate"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="">To Date</label>
                        <div class="col-sm-8 MY8">
                            <div id="txtToDate"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="">Invoice Status</label>
                        <div class="col-sm-8 MY8">
                            <div id="ddlDPStatus"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <a href="#" class="btn btn-danger btn-flat" style="background: #e32228;" onclick="SalesChallanGetData()">Get Data</a>
                    <a href="#" class="btn btn-danger btn-flat" style="background: #e70c0e; border-color:#e70c0e; float: right; margin-left: 5px; padding: 0px 5px 0px 5px;" data-toggle="tooltip" title="Export to PDF"><i class="flaticon-pdf-file" style="font-size: 18px;"></i></a>
                    <a href="#" class="btn btn-danger btn-flat" style="background: #257142; border-color:#257142; float: right; padding: 0px 5px 0px 5px;" onclick="ExportToExcel();"><i class="flaticon-excel-file" style="font-size: 18px;" data-toggle="tooltip" title="Export to Excel"></i></a>
                </div>
            </div>
        </form>
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <div id="tblSalesChallan"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <div class="text-right"> 
            <a href="#" class="btn btn-danger btn-flat" id="btnAddInventory" style="background: #e32228;" onclick="SalesChallanStatusUpdate()">Add To Inventory</a>
        </div>
    </div>
</div>
<div id="dvTable" style="display: none;"></div>
<input type="hidden" id="HiddenSalesChallanID" />
<div id="PopupShowInvoice"></div>

<script>
    var SalesChallanList = [];
    var DPStatusList = [];
    var InvoiveDetailsList = [];
    var varddlDPStatus = "";

    var FDate =  (@Html.Raw(Json.Encode(@ViewBag.ZZFromDate))).split("/");
    var Now = (@Html.Raw(Json.Encode(@ViewBag.ZZNowDate))).split("/");

    var FFDate = new Date(FDate[2],(FDate[1]-1),FDate[0]);
    var NNow = new Date(Now[2],(Now[1]-1),Now[0]);

    arrayCr = @Html.Raw(Json.Encode(@ViewBag.DPStatusList ));
    if(arrayCr !=null)
    {
        for(var i = 0; i < arrayCr.length; i++){
            DPStatusList[i] = arrayCr[i];
        }
    }

    $(document).ready(function () {
        BindSalesChallanList();
        $("#txtFromDate").dxDateBox({
            applyValueMode: "useButtons",
            height: 30,
            type: "date",
            value: NNow,
            //max: [2025, 01, 01],
            //min: FFDate,
           displayFormat: "dd/MM/yyyy"
        });
        $("#txtToDate").dxDateBox({
            applyValueMode: "useButtons",
            height: 30,
            type: "date",
            value: NNow,
            //max: [2025, 01, 01],
            //min: FFDate,
            displayFormat: "dd/MM/yyyy"
        });

        $("#ddlDPStatus").dxSelectBox({
            height: 30,
            dataSource: new DevExpress.data.ArrayStore({
                data: DPStatusList,
                key: "ParameterKey"
            }),
            displayExpr: "Description",
            valueExpr: "ParameterKey",
            placeholder: "Select Status",
            onValueChanged: function (data) {
                
                varddlDPStatus = data.value
                if (data.value == 52) {
                    $('#btnAddInventory').hide();
                }
                else {
                    $('#btnAddInventory').show();
                }
                BindSalesChallanList();
                var grid = $('#tblSalesChallan').dxDataGrid('instance');
                grid.option('dataSource', []);
                
            }

        });
    });

    function BindSalesChallanList() {
        
        if (varddlDPStatus != 52) {
            $("#tblSalesChallan").dxDataGrid({
                dataSource: SalesChallanList,
                height: 420,
                paging: { enabled: true },
                allowColumnResizing: true,
                columnResizingMode: "widget",
                columnAutoWidth: true,
                wordWrapEnabled: false,

                columns: [
                    {
                        dataField: "SelectBox", width: '9%', caption: "Select",

                        cellTemplate: function (container, options) {
                            $("<div style='font-size:12px'>").dxCheckBox({
                                max: 100,
                                min: 1,
                                height: 22,
                                value: options.data.IsActive,
                                onValueChanged: function (e) {
                                    OnChangeChkState(options.data.SalesChallanID, e)
                                }
                            })
                                .append(options.value)
                                .appendTo(container);
                        }
                    },
                    {
                        dataField: "SalesInvoiceNo", width: '15%', caption: "Invoice #", cellTemplate: function (container, options) {
                            $('<a style="color:#333; text-decoration: underline;" />').addClass('dx-link')
                                .text(options.value)
                                .on('dxclick', function (e) {
                                    showInvoice(options.data.SalesChallanID)
                                })
                                .appendTo(container);
                        }
                    },
                    { dataField: "SalesChallanDate", width: '15%', caption: "Invoice Date" },
                    { dataField: "TotalAmount", width: '15%', caption: "Value", alignment: "right", valueFormat: "##,###.##", format: { type: "fixedPoint", precision: "2" } },
                    { dataField: "TransporterName", width: '20%', caption: "Transporter" },
                    { dataField: "LRNo", width: '10%', caption: "LR#" },
                    { dataField: "LRDate", width: '15%', caption: "LR Date" },

                ],
                filterRow: { visible: false },
                showRowLines: true,
                showBorders: true,
                summary: {
                    totalItems: [
                        { name: "Values", column: "TotalAmount", summaryType: "sum", displayFormat: "Total: {0}", valueFormat: "#,###.##", valueFormat: { type: "fixedPoint", precision: 2 } }
                    ]

                }
            });
        }
        else {
            $("#tblSalesChallan").dxDataGrid({
                dataSource: SalesChallanList,
                height: 420,
                paging: { enabled: true },
                allowColumnResizing: true,
                columnResizingMode: "widget",
                columnAutoWidth: true,
                wordWrapEnabled: false,

                columns: [
                    
                    {
                        dataField: "SalesInvoiceNo", width: '15%', caption: "Invoice #", cellTemplate: function (container, options) {
                            $('<a style="color:#333; text-decoration: underline;" />').addClass('dx-link')
                                .text(options.value)
                                .on('dxclick', function (e) {
                                    showInvoice(options.data.SalesChallanID)
                                })
                                .appendTo(container);
                        }
                    },
                    { dataField: "SalesChallanDate", width: '15%', caption: "Invoice Date" },
                    { dataField: "TotalAmount", width: '15%', caption: "Value", alignment: "right", valueFormat: "##,###.##", format: { type: "fixedPoint", precision: "2" } },
                    { dataField: "TransporterName", width: '20%', caption: "Transporter" },
                    { dataField: "LRNo", width: '10%', caption: "LR#" },
                    { dataField: "LRDate", width: '15%', caption: "LR Date" },

                ],
                filterRow: { visible: false },
                showRowLines: true,
                showBorders: true,
                summary: {
                    totalItems: [
                        { name: "Values", column: "TotalAmount", summaryType: "sum", displayFormat: "Total: {0}", valueFormat: "#,###.##", valueFormat: { type: "fixedPoint", precision: 2 } }
                    ]

                }
            });
        }
        //if ($("#tblSalesChallan").dxDataGrid("instance").getDataSource().items().length > 0) {
        //    //if (varddlDPStatus != 52)
        //    //    $("#tblSalesChallan").dxDataGrid("columnOption", "SelectBox", "visible", true);
        //    //else
        //    $("#tblSalesChallan").dxDataGrid("caption", "Select", "visible", false);
        //}
    }
    var TempList = [];
    function OnChangeChkState(RowId, e) {
        
        $.each(SalesChallanList, function (index, object) {
            if (object.SalesChallanID == RowId) {
                var modal = {};
                object.SelectBox = e.value;
                
            }
        });
        //var obj = SalesChallanList.filter(function (value, index, arr) {
        //    return value.SalesChallanID == RowId;

        //});
        //if (obj.length > 0)
        //    obj.SelectBox = e.value;
        //TempList.push(obj[0]);
    }

     function SetDate(dateStr) {
        var strDate
        var now = new Date(dateStr);
        var Day = now.getDate()
        var Month = (now.getMonth() + 1)
        var Year = now.getFullYear()
        if (Day < 10) {
            Day = "0" + Day;
        }
        if (Month < 10) {
            Month = "0" + Month;
        }
        strDate = Day + "/" + Month + "/" + Year
        return strDate;
    }

    function SalesChallanGetData() {
        try {
            if (txtFromDate == null || txtFromDate == "" || txtFromDate == undefined || txtToDate == null || txtToDate == "" || txtToDate == undefined || varddlDPStatus == null) {
                return true
            }
            loadPanel.show();
            var FromDate = SetDate($('#txtFromDate').dxDateBox('instance').option('value'));
            var ToDate = SetDate($('#txtToDate').dxDateBox('instance').option('value'));
            var data = { 'FromDate': FromDate, 'ToDate': ToDate, 'DPStatusId': varddlDPStatus };
            var dataWithAntiforgeryToken = $.extend(data, { '__RequestVerificationToken': $("input[name='__RequestVerificationToken']").val() });
            $.ajax({
                url: "../Home/SalesChallanGetByFromDateToDateDPStatus",
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
                success: function (Response) {
                    loadPanel.hide();
                    if (Response.StatusId != "99") {
                        SalesChallanList = Response.Result;
                        $("#tblSalesChallan").dxDataGrid('instance').option("dataSource", SalesChallanList);
                    }
                    else {
                        alert(Response.Status);
                    }
                },
                error: function (xhr) {
                    loadPanel.hide();
                    alert("Data size is too large!");
                }
            });
        }
        catch (e) {
            loadPanel.hide();
            alert("Data size is too large!");
        }
    }

    function SalesChallanStatusUpdate() {
        try {
            var SalesChallanListUPdt = [];
            var ObjdbmlCommon = {};
            loadPanel.show();
            $.each(SalesChallanList, function (index, object) {
                if (object.SelectBox == true) {
                    var modal = {};
                    modal.SalesChallanID = object.SalesChallanID;
                    //modal.DPStatusParaId = object.DPStatusParaId;
                    modal.DPStatusParaId = 52;
                    SalesChallanListUPdt.push(modal);
                }
            });
            var FromDate = SetDate($('#txtFromDate').dxDateBox('instance').option('value'));
            var ToDate = SetDate($('#txtToDate').dxDateBox('instance').option('value'));
            ObjdbmlCommon.StringOne = FromDate;
            ObjdbmlCommon.StringTwo = ToDate;
            ObjdbmlCommon.StringFive = varddlDPStatus;

            if (SalesChallanListUPdt.length > 0) {
                var data = JSON.stringify({ 'ObjSalesChallanList': SalesChallanListUPdt, 'ObjdbmlCommon': ObjdbmlCommon });
                $.ajax({
                    url: "../Home/SalesChallanUpdateDPStatus",
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: data,
                    contentType: "application/json; charset=utf-8",
                    success: function (Response) {
                        loadPanel.hide();
                        if (Response.StatusId == "1") {
                            SalesChallanList = Response.Result;
                            $("#tblSalesChallan").dxDataGrid('instance').option("dataSource", SalesChallanList);
                        }
                        else {
                            SalesChallanList = [];
                            $("#tblSalesChallan").dxDataGrid('instance').option("dataSource", SalesChallanList);
                            alert(Response.Status);
                        }
                    },
                    error: function (xhr) {
                        loadPanel.hide();
                        alert("Status Updation have some problem!");
                    }
                });
            }
        }
        catch (e) {
            loadPanel.hide();
            alert("Data size is too large!");
        }
    }

    function ExportToExcel() {
        try {
            loadPanel.show();
            var col = [];
            for (var i = 0; i < SalesChallanList.length; i++) {
                for (var key in SalesChallanList[i]) {
                    if (col.indexOf(key) === -1) {
                        if (key == 'RowNumber' || key == 'UserId') {
                        } else {
                            col.push(key);
                        }
                    }
                }
            }

            var table = document.createElement("table");
            var tr = table.insertRow(-1);
            for (var i = 0; i < col.length; i++) {
                var th = document.createElement("th");
                th.innerHTML = col[i];
                tr.appendChild(th);
            }
            for (var i = 0; i < SalesChallanList.length; i++) {
                tr = table.insertRow(-1);
                for (var j = 0; j < col.length; j++) {
                    var tabCell = tr.insertCell(-1);
                    tabCell.innerHTML = SalesChallanList[i][col[j]];
                }
            }
            var dvTable = document.getElementById("dvTable");
            dvTable.innerHTML = "";
            dvTable.appendChild(table);
            $("#dvTable").table2excel({
                filename: "SalesChallan.xls"
            });
            loadPanel.hide();
        }
        catch (e) {
            loadPanel.hide();
            alert(e.message);
        }
        }

    function showInvoice(SalesChallanId) {
          var html = "";
        html += "<div class='row'>";
        html += "<div class='col-md-12'><div class='col-md-1'><a href='#' class='btn btn-danger btn-flat' style='background: #257142; border-color:#257142;padding: 0px 5px 0px 5px;' onclick='Excel();'><i class='flaticon-excel-file' style='font-size: 18px;' data-toggle='tooltip' title='Export to Excel'></i></a></div>";
        html += "<div class='col-md-3' style='font-weight:bold'>Net Amount : <span id='txtnetAmount'></span></div><div class='col-md-3' style='font-weight:bold'>Total Amount : <span id='txttotalAmount'></span></div></div>";
        html += "</div><br/>";
        html += "<div class='col-md-12'>";
        html += "<div id='btnInvoiceDetails'>";
        html += "</div>";
        html += "</div>";
        $("#PopupShowInvoice").dxPopup({
            showTitle: true,
            title: 'Show Invoice Details',
            height: 550,
            width: 1000,
            contentTemplate: function (contentElement) {
                contentElement.append(html)
            }
        });


        $("#PopupShowInvoice").dxPopup("instance").show();
        SalesChallanGetBySalesChallanId(SalesChallanId)
    }

    function SalesChallanGetBySalesChallanId(SalesChallanId) {
        try {
            if (SalesChallanId == null || SalesChallanId == "" || SalesChallanId == undefined ) {
                return true
            }
            loadPanel.show();
            var data = { 'SalesChallanId': SalesChallanId};
            var dataWithAntiforgeryToken = $.extend(data, { '__RequestVerificationToken': $("input[name='__RequestVerificationToken']").val() });
            $.ajax({
                url: "../Home/SalesChallanGetBySalesChallanId",
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
                success: function (Response) {
                    loadPanel.hide();
                    if (Response.StatusId != "99") {
                        InvoiveDetailsList = Response.Result;
                        if (InvoiveDetailsList.length > 0) {
                            $('#txtnetAmount').html(InvoiveDetailsList[0].NetAmount + " INR");
                            //$('#txttotalAmount').html(InvoiveDetailsList[0].TotalAmount);
                           // (Math.round(16.67)).toFixed(2);
                            $('#txttotalAmount').html(Math.round(InvoiveDetailsList[0].TotalAmount.toFixed(2)) + ".00 INR");
                        }
                        BindInvoiceDetailsList()
                    }
                    else {
                        alert(Response.Status);
                    }
                },
                error: function (xhr) {
                    loadPanel.hide();
                    alert("Data size is too large!");
                }
            });
        }
        catch (e) {
            loadPanel.hide();
            alert("Data size is too large!");
        }
    }

    function BindInvoiceDetailsList() {
        $("#btnInvoiceDetails").dxDataGrid({
            dataSource: InvoiveDetailsList,
            height: 416,
            filterRow: { visible: true },
            allowColumnResizing: true,
            columnResizingMode: "widget",
            columnAutoWidth: true,
            wordWrapEnabled: false,
            columns: [
                //{
                //    dataField: "ZZSalesChallanDate", width: 100, caption: "Sales Challan Date",
                //     headerCellTemplate: function (header, info) {
                //        $('<div>').html("Sales <br/> Challan Date").css('text-align', 'center').appendTo(header);
                //    }
                //},
                { dataField: "itemcode", width: 100, caption: "item Code" },
                { dataField: "ItemName", width: 100, caption: "Item Name" },
                {
                    dataField: "DispatchQuantity", width: 100, caption: "Dispatch Quantity",
                    headerCellTemplate: function (header, info) {
                        $('<div>').html("Dispatch <br/> Quantity").css('text-align', 'center').appendTo(header);
                    }
                },
                { dataField: "BasicRate", width: 80, caption: "DP Rate" },
                {
                    dataField: "Dis1Rate", width: 100, caption: "Trade Discount Rate",
                    headerCellTemplate: function (header, info) {
                        $('<div>').html("Trade <br/> Discount Rate").css('text-align', 'center').appendTo(header);
                    }
                },
                {
                    dataField: "Dis2Rate", width: 100, caption: "Scheme Discount Rate",
                    headerCellTemplate: function (header, info) {
                        $('<div>').html("Scheme <br/> Discount Rate").css('text-align', 'center').appendTo(header);
                    }
                },
                {
                    dataField: "Dis3rate", width: 100, caption: "Special Discount Rate",
                    headerCellTemplate: function (header, info) {
                        $('<div>').html("Special <br/> Discount Rate").css('text-align', 'center').appendTo(header);
                    }
                },
                //scd.Dis1Rate, scd.Dis2Rate, scd.Dis3rate,
               // { dataField: "Rate", width: 80, caption: "Net Rate" },
                { dataField: "NetValue", width: 100, caption: "Net Value" },
                { dataField: "GrossValue", width: 100, caption: "Gross Value" },
                //{ dataField: "Discount4", width: 100, caption: "Discount4" }
                //  {
                //    dataField: "SchemeDiscount", width: 100, caption: "Scheme Discount",
                //     headerCellTemplate: function (header, info) {
                //        $('<div>').html("Scheme <br/> Discount").css('text-align', 'center').appendTo(header);
                //    }
                //},
                { dataField: "Remarks", width: 150, caption: "Remarks" },

            ],
            export: {
                fileName: "Invoice Details_" + $("#HiddenPartyId").val() + "_" + $("#HiddenCurrentDate").val()
            },
            showRowLines: true,
            showBorders: true,
        });
    }

      function Excel() {
        $("#btnInvoiceDetails").dxDataGrid("instance").exportToExcel(false);
        }


</script>