var DYN_WEB = DYN_WEB || {}; DYN_WEB.Event = function (t) { return t.add = document.addEventListener ? function (t, e, i, n) { n = n || !1, t.addEventListener(e, i, n) } : function (t, e, i) { t.attachEvent("on" + e, i) }, t.remove = document.removeEventListener ? function (t, e, i, n) { n = n || !1, t.removeEventListener(e, i, n) } : function (t, e, i) { t.detachEvent("on" + e, i) }, t.DOMit = function (t) { return t = t ? t : window.event, t.target || (t.target = t.srcElement), t.preventDefault || (t.preventDefault = function () { return t.returnValue = !1, !1 }), t.stopPropagation || (t.stopPropagation = function () { t.cancelBubble = !0 }), t }, t.getTarget = function (e) { e = t.DOMit(e); var i = e.target; return 1 !== i.nodeType && (i = i.parentNode), i }, t.domReady = function () { function t(t) { if (!i && ("readystatechange" !== t.type || "complete" === document.readyState)) { for (var n = 0, s = e.length; s > n; n++) e[n].call(document); i = !0, e = [] } } var e = [], i = !1; return document.addEventListener ? (document.addEventListener("DOMContentLoaded", t, !1), document.addEventListener("readystatechange", t, !1), window.addEventListener("load", t, !1)) : document.attachEvent && (document.attachEvent("onreadystatechange", t), window.attachEvent("onload", t)), function (t) { i ? t.call(document) : e.push(t) } }(), t }(DYN_WEB.Event || {}), DYN_WEB.Util = function (t) { var e = DYN_WEB.Event; return t.$ = function (t) { return document.getElementById(t) }, t.augment = function (t, e) { var i; for (i in e) e.hasOwnProperty(i) && !t[i] && (t[i] = e[i]) }, t.contained = function (t, e) { if (!t) return !1; for (; t = t.parentNode;) if (t === e) return !0; return !1 }, t.mouseleave = function (i, n) { i = e.DOMit(i); var s = i.relatedTarget ? i.relatedTarget : i.toElement ? i.toElement : null; return n === s || t.contained(s, n) ? !1 : !0 }, t.getLayerOffsets = function (e, i) { var n = 0, s = 0; if (t.contained(e, i)) do n += e.offsetLeft, s += e.offsetTop; while ((e = e.offsetParent) !== i); return { x: n, y: s } }, t }(DYN_WEB.Util || {}), DYN_WEB.Scroll_Div = function () { function t(e, i) { this.id = e, t.col[this.id] = this, t.ids[t.ids.length] = this.id, this.load(i) } var e = DYN_WEB.Util; return t.col = {}, t.ids = [], t.isSupported = function () { return !(!document.getElementById || !document.addEventListener && !document.attachEvent) }, t.prototype = { load: function (t) { var i; this.lyrId && (i = e.$(this.lyrId), i.style.visibility = "hidden"), this.lyr = i = e.$(t), this.lyr.style.position = "absolute", this.lyrId = t, this.y = 0, this.x = 0, this.shiftTo(0, 0), this.getDims(), i.style.visibility = "visible", this.ready = !0, this.on_load() }, shiftTo: function (t, e) { !this.lyr || isNaN(t) || isNaN(e) || (this.x = t, this.y = e, this.lyr.style.left = Math.round(t) + "px", this.lyr.style.top = Math.round(e) + "px") }, getDims: function () { var t = e.$(this.id), i = e.$(this.lyrId); this.lyrWd = i.offsetWidth, this.lyrHt = i.offsetHeight, this.wnWd = t.offsetWidth, this.wnHt = t.offsetHeight; var n = this.lyrWd - this.wnWd, s = this.lyrHt - this.wnHt; this.maxX = n > 0 ? n : 0, this.maxY = s > 0 ? s : 0 }, on_load: function () { }, on_scroll: function () { }, on_scroll_start: function () { }, on_scroll_stop: function () { }, on_scroll_end: function () { }, clearTimer: function () { clearInterval(this.timerId), this.timerId = 0 } }, t }(), function () { var t = DYN_WEB.Util, e = DYN_WEB.Scroll_Div; e.defaultSpeed = 100; var i = { initScrollVals: function (i, n) { if (this.ready) { this.clearTimer(), this.speed = n || e.defaultSpeed, this.fx = 0 === i ? -1 : 180 === i ? 1 : 0, this.fy = 90 === i ? 1 : 270 === i ? -1 : 0, this.endX = 90 === i || 270 === i ? this.x : 0 === i ? -this.maxX : 0, this.endY = 0 === i || 180 === i ? this.y : 90 === i ? 0 : -this.maxY, this.lyr = t.$(this.lyrId), this.lastTime = (new Date).getTime(), this.on_scroll_start(this.x, this.y); var s = this; s.timerId = setInterval(function () { s.scroll() }, 10) } }, scroll: function () { var t = (new Date).getTime(), e = (t - this.lastTime) / 1e3 * this.speed; if (e > 0) { var i = this.x + this.fx * e, n = this.y + this.fy * e; -1 === this.fx && i > -this.maxX || 1 === this.fx && 0 > i || -1 === this.fy && n > -this.maxY || 1 === this.fy && 0 > n ? (this.lastTime = t, this.shiftTo(i, n), this.on_scroll(i, n)) : (this.clearTimer(), this.shiftTo(this.endX, this.endY), this.on_scroll(this.endX, this.endY), this.on_scroll_end(this.endX, this.endY)) } }, ceaseScroll: function () { this.ready && (this.clearTimer(), this.on_scroll_stop(this.x, this.y)) } }; t.augment(e.prototype, i) }(), function () { var t = DYN_WEB.Event, e = DYN_WEB.Util, i = DYN_WEB.Scroll_Div, n = { makeSmoothAuto: function (n) { var s = n.axis || "h", o = "v" === s ? 270 : 0, r = e.$(this.id), a = this; if (this.speed = n.speed || i.defaultSpeed, n.bRepeat && n.repeatId) { var h = e.getLayerOffsets(e.$(n.repeatId), e.$(this.id)); this.on_scroll = function () { var t; "v" === s && Math.round(this.y) <= -h.y ? t = !0 : "h" === s && Math.round(this.x) <= -h.x && (t = !0), t && (this.shiftTo(0, 0), this.initScrollVals(o, this.speed)) } } n.bPauseResume && (t.add(r, "mouseover", function () { a.ceaseScroll() }), t.add(r, "mouseout", function (t) { a.checkMouseout(t, a.id, o) })), this.initScrollVals(o, this.speed) }, checkMouseout: function (t, n, s) { var o = i.col[n]; e.mouseleave(t, e.$(n)) && o.initScrollVals(s, o.speed) } }; e.augment(i.prototype, n) }();